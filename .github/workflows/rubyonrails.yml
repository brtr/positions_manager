# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
      redis:
        image: redis:alpine
        ports: ["6379:6379"]
        options: --entrypoint redis-server
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
      RAILS_HOST_NAME: '127.0.0.1'
      S3_BUCKET_NAME: coin-elite
      ACCESS_ID: ''
      ACCESS_KEY: ''
      AWS_REGION: us-east-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - uses: actions/setup-node@v3
        with:
          node-version: 16.19.0
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@ee2113536afb7f793eed4ce60e8d3b26db912da4 # v1.127.0
        with:
          bundler-cache: true
      - name: "Compile Assets"
        shell: bash
        run: bundle exec rails assets:precompile
      # Setup the Database
      - name: setup database and run migrate
        run: |
            bundle exec rails db:setup
            bundle exec rails db:migrate
      # Add or replace test runners here
      - name: Run tests
        run: |
            bundle exec rspec
            bundle exec cucumber
      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notification_title: "Github Actions CI Result"
          message_format: "{emoji} *Test* {status_message} in <{commit_url}|{commit_sha}>"
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}